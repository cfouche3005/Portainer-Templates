{
    "version": "2",
    "templates": [
        {
            "title": "Caddy",
            "name": "caddy",
            "image": "caddy:latest",
            "description": "Still the only web server to use TLS automatically and by default. Deploy and scale HTTPS effortlessly with Caddy 2.",
            "categories": [
                "Web",
                "Proxy",
                "Certificate"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "volumes": [
                {
                    "container": "/etc/caddy",
                    "bind": "/portainer/Files/AppData/Config/Caddy/etc/caddy"
                },
                {
                    "container": "/data",
                    "bind": "/portainer/Files/AppData/Config/Caddy/data"
                },
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Config/Caddy/config"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/caddy.png",
            "network_mode": "host",
            "type": 1
        },
        {
            "title": "Pritunl",
            "image": "goofball222/pritunl:latest",
            "description": "Enterprise Distributed OpenVPN, IPsec and WireGuard Server.",
            "categories": [
                "Web",
                "VPN"
            ],
            "platform": "linux",
            "note": "Docs : https://hub.docker.com/r/goofball222/pritunl",
            "restart_policy": "unless-stopped",
            "ports": [
                "80:80/tcp",
                "443:443/tcp",
                "1194:1194/tcp",
                "1194:1194/udp",
                "1195:1195/udp",
                "9700:9700/tcp"
            ],
            "volumes": [
                {
                    "container": "/etc/localtime:ro",
                    "bind": "/etc/localtime"
                }
            ],
            "env": [
                {
                    "name": "DEBUG",
                    "default": "false",
                    "label": "Debug",
                    "description": "Set to true for extra entrypoint script verbosity for debugging"
                },
                {
                    "name": "MONGODB_URI",
                    "default": "mongodb://mongo:27017/pritunl",
                    "label": "Mongodb",
                    "description": "Sets the URI Pritunl will access for the Mongo DB instance"
                },
                {
                    "name": "PRITUNL_OPTS",
                    "default": "",
                    "label": "Pritunl Options",
                    "description": "Any additional custom run options for the container pritunl process"
                },
                {
                    "name": "REVERSE_PROXY",
                    "default": "false",
                    "label": "Reverse proxy",
                    "description": "Set to true to set the pritunl web interface to run in reverse-proxy mode (Traefik/nginx)"
                },
                {
                    "name": "WIREGUARD",
                    "default": "false",
                    "label": "Wireguard",
                    "description": "Set to true, Switches web interface back to port 443 and HTTPS if running wireguard with reverse-proxy (Traefik/nginx)"
                },
                {
                    "name": "TZ",
                    "default": "CET",
                    "description": "",
                    "label": "Timezone"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/pritunl.png",
            "network_mode": "host",
            "type": 1,
            "privileged": true
        },
        {
            "title": "Pritunl with Fake Api",
            "image": "cf3005/pritunl-with-fake-api:latest",
            "description": "Enterprise Distributed OpenVPN, IPsec and WireGuard Server.",
            "categories": [
                "Web",
                "VPN"
            ],
            "platform": "linux",
            "note": "Docs : https://hub.docker.com/r/goofball222/pritunl",
            "restart_policy": "unless-stopped",
            "ports": [
                "80:80/tcp",
                "443:443/tcp",
                "1194:1194/tcp",
                "1194:1194/udp",
                "1195:1195/udp",
                "9700:9700/tcp"
            ],
            "volumes": [
                {
                    "container": "/etc/localtime:ro",
                    "bind": "/etc/localtime"
                }
            ],
            "env": [
                {
                    "name": "DEBUG",
                    "default": "false",
                    "label": "Debug",
                    "description": "Set to true for extra entrypoint script verbosity for debugging"
                },
                {
                    "name": "MONGODB_URI",
                    "default": "mongodb://mongo:27017/pritunl",
                    "label": "Mongodb URI",
                    "description": "Sets the URI Pritunl will access for the Mongo DB instance"
                },
                {
                    "name": "PRITUNL_OPTS",
                    "default": "",
                    "label": "Pritunl Options",
                    "description": "Any additional custom run options for the container pritunl process"
                },
                {
                    "name": "REVERSE_PROXY",
                    "default": "false",
                    "label": "Reverse proxy",
                    "description": "Set to true to set the pritunl web interface to run in reverse-proxy mode (Traefik/nginx)"
                },
                {
                    "name": "WIREGUARD",
                    "default": "false",
                    "label": "Wireguard",
                    "description": "Set to true, Switches web interface back to port 443 and HTTPS if running wireguard with reverse-proxy (Traefik/nginx)"
                },
                {
                    "name": "TZ",
                    "default": "CET",
                    "label": "Timezone"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/pritunl.png",
            "network_mode": "host",
            "type": 1,
            "privileged": true
        },
        {
            "title": "Onedrive",
            "image": "driveone/onedrive:alpine",
            "description": "A free Microsoft OneDrive Client which supports OneDrive Personal, OneDrive for Business, OneDrive for Office365 and SharePoint.",
            "categories": [
                "Files",
                "Backup",
                "Sync"
            ],
            "platform": "linux",
            "note": "Sources : https://github.com/abraunegg/onedrive\nDocs : https://github.com/abraunegg/onedrive/tree/master/docs\nUsing the alpine image tag",
            "restart_policy": "unless-stopped",
            "volumes": [
                {
                    "container": "/onedrive/conf",
                    "bind": "/portainer/Files/AppData/Config/Onedrive"
                },
                {
                    "container": "/onedrive/data",
                    "bind": "/portainer/Files/AppData/Data/Onedrive"
                }
            ],
            "env": [
                {
                    "name": "ONEDRIVE_UID",
                    "default": "1000",
                    "label": "Onedrive UserID",
                    "description": "UserID (UID) to run as"
                },
                {
                    "name": "ONEDRIVE_GID",
                    "default": "100",
                    "description": "GroupID (GID) to run as",
                    "label": "Onedrive GroupID"
                },
                {
                    "name": "ONEDRIVE_VERBOSE",
                    "default": "0",
                    "label": "Onedrive Verbose",
                    "description": "Controls \"--verbose\" switch on onedrive sync. Default is 0"
                },
                {
                    "name": "ONEDRIVE_DEBUG",
                    "default": "0",
                    "description": "Controls \"--verbose --verbose\" switch on onedrive sync. Default is 0",
                    "label": "Onedrive Debug"
                },
                {
                    "name": "ONEDRIVE_DEBUG_HTTPS",
                    "default": "0",
                    "description": "Controls \"--debug-https\" switch on onedrive sync. Default is 0",
                    "label": "Onedrive Debug HTTPS"
                },
                {
                    "name": "ONEDRIVE_RESYNC",
                    "default": "0",
                    "label": "Onedrive Resync",
                    "description": "Controls \"--resync\" switch on onedrive sync. Default is 0"
                },
                {
                    "name": "ONEDRIVE_DOWNLOADONLY",
                    "default": "0",
                    "description": "Controls \"--download-only\" switch on onedrive sync. Default is 0",
                    "label": "Onedrive Download Only"
                },
                {
                    "name": "ONEDRIVE_UPLOADONLY",
                    "default": "0",
                    "description": "Controls \"--upload-only\" switch on onedrive sync. Default is 0",
                    "label": "Onedrive Upload Only"
                },
                {
                    "name": "ONEDRIVE_LOGOUT",
                    "default": "0",
                    "description": "Controls \"--logout\" switch. Default is 0",
                    "label": "Ondrive Logout"
                },
                {
                    "name": "ONEDRIVE_REAUTH",
                    "default": "0",
                    "description": "Controls \"--reauth\" switch. Default is 0",
                    "label": "Onedrive Reauth"
                },
                {
                    "name": "ONEDRIVE_AUTHFILES",
                    "default": "",
                    "description": "Controls \"--auth-files\" option. Default is \"\"",
                    "label": "Onedrive AuthFiles"
                },
                {
                    "name": "ONEDRIVE_AUTHRESPONSE",
                    "default": "",
                    "label": "Onedrive AuthResponse",
                    "description": "Controls \"--auth-response\" option. Default is \"\""
                },
                {
                    "name": "ONEDRIVE_DISPLAY_CONFIG",
                    "default": "0",
                    "description": "Controls \"--display-running-config\" switch on onedrive sync. Default is 0",
                    "label": "Ondrive Display Config"
                }
            ],
            "logo": "https://upload.wikimedia.org/wikipedia/commons/3/3c/Microsoft_Office_OneDrive_%282019%E2%80%93present%29.svg",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Authelia",
            "image": "authelia/authelia:latest",
            "description": "Authelia is an open-source authentication and authorization server and portal fulfilling the identity and access management (IAM) role of information security in providing multi-factor authentication and single sign-on (SSO) for your applications via a web portal. It acts as a companion for common reverse proxies.",
            "categories": [
                "Web",
                "Security"
            ],
            "platform": "linux",
            "note": "See  https://www.authelia.com/integration/deployment/docker/#standalone-example for configuration",
            "restart_policy": "unless-stopped",
            "ports": [
                "9091:9091/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": ""
                },
                {
                    "container": "/secrets",
                    "bind": ""
                }
            ],
            "env": [
                {
                    "name": "AUTHELIA_JWT_SECRET_FILE",
                    "default": "/secrets/JWT_SECRET",
                    "description": "Defines the secret used to craft JWT tokens leveraged by the identity verification process. This can a random string. It’s strongly recommended this is a Random Alphanumeric String with 64 or more characters.",
                    "label": "JWT secret"
                },
                {
                    "name": "AUTHELIA_SESSION_SECRET_FILE",
                    "default": "/secrets/SESSION_SECRET",
                    "label": "Session secret",
                    "description": "The secret key used to encrypt session data in Redis.  It’s strongly recommended this is a Random Alphanumeric String with 64 or more characters."
                },
                {
                    "name": "AUTHELIA_STORAGE_POSTGRES_PASSWORD_FILE",
                    "default": "/secrets/STORAGE_PASSWORD",
                    "label": "Postgres Password",
                    "description": "The password paired with the username used to connect to the database.  It’s strongly recommended this is a Random Alphanumeric String with 64 or more characters and the user password is changed to this value."
                },
                {
                    "name": "AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE",
                    "default": "/secrets/STORAGE_ENCRYPTION_KEY",
                    "label": "Encryption Key",
                    "description": "The encryption key used to encrypt data in the database. We encrypt data by creating a sha256 checksum of the provided value, and use that to encrypt the data with the AES-GCM 256bit algorithm.  The minimum length of this key is 20 characters.  It’s strongly recommended this is a Random Alphanumeric String with 64 or more characters."
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/authelia.png",
            "network_mode": "host",
            "type": 1
        },
        {
            "title": "PostgreSQL",
            "name": "postgresql",
            "image": "postgres:alpine",
            "description": "PostgreSQL is a powerful, open source object-relational database system with over 35 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance.",
            "categories": [
                "Database"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "5432:5432/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/postgresql/data",
                    "bind": "/portainer/Files/AppData/Data/PostgreSQL"
                }
            ],
            "env": [
                {
                    "name": "POSTGRES_USER",
                    "default": "postgres",
                    "label": "Postgres SuperUser"
                },
                {
                    "name": "POSTGRES_PASSWORD",
                    "default": "",
                    "label": "Postgres SuperUser Password"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/postgres.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "LLDAP",
            "name": "lldap",
            "image": "nitnelave/lldap:stable",
            "description": "This project is a lightweight authentication server that provides an opinionated, simplified LDAP interface for authentication. It integrates with many backends, from KeyCloak to Authelia to Nextcloud and more !",
            "categories": [
                "Web",
                "Security"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "3890:3890/tcp",
                "17170:17170/tcp"
            ],
            "volumes": [
                {
                    "container": "/data",
                    "bind": "/portainer/Files/AppData/Config/LLAP"
                }
            ],
            "env": [
                {
                    "name": "UID",
                    "default": "1000",
                    "label": "UserID"
                },
                {
                    "name": "GID",
                    "default": "100",
                    "label": "GroupID"
                },
                {
                    "name": "TZ",
                    "default": "CEST",
                    "label": "Timezone"
                },
                {
                    "name": "LLDAP_JWT_SECRET",
                    "default": "",
                    "label": "LLDAP_JWT_SECRET"
                },
                {
                    "name": "LLDAP_LDAP_USER_PASS",
                    "default": "",
                    "label": "LLDAP_LDAP_USER_PASS"
                },
                {
                    "name": "LLDAP_LDAP_BASE_DN",
                    "default": "",
                    "label": "LLDAP_LDAP_BASE_DN"
                }
            ],
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "AdGuardHome",
            "name": "adguard-home",
            "image": "adguard/adguardhome:latest",
            "description": "AdGuard Home is a network-wide software for blocking ads and tracking. After you set it up, it'll cover ALL your home devices, and you don't need any client-side software for that.",
            "categories": [
                "DNS",
                "Web"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "53:53/tcp",
                "53:53/udp",
                "67:67/udp",
                "68:68/tcp",
                "68:68/udp",
                "80:80/tcp",
                "443:443/tcp",
                "3000:3000/tcp",
                "853:853/tcp",
                "784:784/udp",
                "5443:5443/tcp",
                "5443:5443/udp"
            ],
            "volumes": [
                {
                    "container": "/opt/adguardhome/work",
                    "bind": "/portainer/Files/AppData/Config/Adguard/Workdir"
                },
                {
                    "container": "/opt/adguardhome/conf",
                    "bind": "/portainer/Files/AppData/Config/Adguard/Conf"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/adguard-home.png",
            "network_mode": "host",
            "type": 1
        },
        {
            "title": "AdGuardHome Sync",
            "name": "adguard-home-sync",
            "image": "ghcr.io/bakito/adguardhome-sync:latest",
            "description": "Synchronize AdGuardHome config to replica instances.",
            "categories": [
                "DNS",
                "Sync"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8080:8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Config/Adguard/Sync"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/adguard-home.png",
            "type": 1
        },
        {
            "title": "Homepage",
            "name": "homepage",
            "image": "ghcr.io/gethomepage/homepage:latest",
            "description": "A modern (fully static, fast), secure (fully proxied), highly customizable application dashboard with integrations for more than 25 services and translations for over 15 languages. Easily configured via YAML files (or discovery via docker labels).",
            "categories": [
                "Web",
                "Dashboard"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8300:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/app/config",
                    "bind": "/portainer/Files/AppData/Config/Homepage"
                },
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/homepage.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Docker Socket Proxy",
            "name": "dockerproxy",
            "image": "tecnativa/docker-socket-proxy:latest",
            "description": "This is a security-enhanced proxy for the Docker Socket.",
            "categories": [
                "Web",
                "Security",
                "Docker"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "3486:2375/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock"
                }
            ],
            "env": [
                {
                    "name": "EVENTS",
                    "default": "1",
                    "label": "EVENTS"
                },
                {
                    "name": "PING",
                    "default": "1",
                    "label": "PING"
                },
                {
                    "name": "VERSION",
                    "default": "1",
                    "label": "VERSION"
                },
                {
                    "name": "AUTH",
                    "default": "0",
                    "label": "AUTH"
                },
                {
                    "name": "SECRETS",
                    "default": "0",
                    "label": "SECRETS"
                },
                {
                    "name": "POST",
                    "default": "0",
                    "label": "POST"
                },
                {
                    "name": "BUILD",
                    "default": "0",
                    "label": "BUILD"
                },
                {
                    "name": "COMMIT",
                    "default": "0",
                    "label": "COMMIT"
                },
                {
                    "name": "CONFIGS",
                    "default": "0",
                    "label": "CONFIGS"
                },
                {
                    "name": "CONTAINERS",
                    "default": "1",
                    "label": "CONTAINERS"
                },
                {
                    "name": "DISTRIBUTION",
                    "default": "0",
                    "label": "DISTRIBUTION"
                },
                {
                    "name": "EXEC",
                    "default": "0",
                    "label": "EXEC"
                },
                {
                    "name": "GRPC",
                    "default": "0",
                    "label": "GRPC"
                },
                {
                    "name": "IMAGES",
                    "default": "0",
                    "label": "IMAGES"
                },
                {
                    "name": "INFO",
                    "default": "0",
                    "label": "INFO"
                },
                {
                    "name": "NETWORKS",
                    "default": "0",
                    "label": "NETWORKS"
                },
                {
                    "name": "NODES",
                    "default": "0",
                    "label": "NODES"
                },
                {
                    "name": "PLUGINS",
                    "default": "0",
                    "label": "PLUGINS"
                },
                {
                    "name": "SERVICES",
                    "default": "0",
                    "label": "SERVICES"
                },
                {
                    "name": "SESSION",
                    "default": "0",
                    "label": "SESSION"
                },
                {
                    "name": "SWARM",
                    "default": "0",
                    "label": "SWARM"
                },
                {
                    "name": "SYSTEM",
                    "default": "0",
                    "label": "SYSTEM"
                },
                {
                    "name": "TASKS",
                    "default": "0",
                    "label": "TASKS"
                },
                {
                    "name": "VOLUMES",
                    "default": "0",
                    "label": "VOLUMES"
                },
                {
                    "name": "SOCKET_PATH",
                    "default": "/var/run/docker.sock",
                    "label": "SOCKET_PATH"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/docker.png",
            "network_mode": "bridge",
            "type": 1,
            "privileged": true
        },
        {
            "title": "Caddy with Cloudflare DNS",
            "name": "caddy",
            "image": "cf3005/caddy-with-dns-cloudflare:latest",
            "description": "Still the only web server to use TLS automatically and by default. Deploy and scale HTTPS effortlessly with Caddy 2.",
            "categories": [
                "Web",
                "Proxy",
                "Certificate"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "volumes": [
                {
                    "container": "/etc/caddy",
                    "bind": "/portainer/Files/AppData/Config/Caddy/etc/caddy"
                },
                {
                    "container": "/data",
                    "bind": "/portainer/Files/AppData/Config/Caddy/data"
                },
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Config/Caddy/config"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/caddy.png",
            "network_mode": "host",
            "type": 1
        },
        {
            "title": "Acme.sh",
            "name": "acme.sh",
            "image": "neilpang/acme.sh:latest",
            "description": "An ACME Shell script: acme.sh",
            "categories": [
                "Web",
                "Certificate"
            ],
            "platform": "linux",
            "note": "Acme.sh run as daemon so you need to use docker exec to execute any acme.sh commands.",
            "restart_policy": "unless-stopped",
            "volumes": [
                {
                    "container": "/acme.sh",
                    "bind": "/portainer/Files/AppData/Config/Acme.sh"
                }
            ],
            "command": "daemon",
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/lets-encrypt.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "SearX-NG",
            "name": "searx-ng",
            "image": "searxng/searxng:latest",
            "description": "SearXNG is a free internet metasearch engine which aggregates results from more than 70 search services. Users are neither tracked nor profiled. Additionally, SearXNG can be used over Tor for online anonymity.",
            "categories": [
                "Web",
                "Search Engine"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8079:8079/tcp"
            ],
            "volumes": [
                {
                    "container": "/etc/searxng",
                    "bind": "/portainer/Files/AppData/Config/SearX-NG"
                }
            ],
            "env": [
                {
                    "name": "BASE_URL",
                    "default": "http://localhost:8079",
                    "label": "Base URL"
                },
                {
                    "name": "INSTANCE_NAME",
                    "default": "cfouche-search",
                    "label": "Instance Name"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/searxng.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Nginx Proxy Manager",
            "name": "nginx-proxy-manager",
            "image": "jc21/nginx-proxy-manager:latest",
            "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.",
            "categories": [
                "Proxy",
                "Web",
                "Certificate"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "80:80/tcp",
                "443:443/tcp",
                "81:81/tcp"
            ],
            "volumes": [
                {
                    "container": "/data",
                    "bind": "/portainer/Files/AppData/Config/Nginx-Proxy-Manager/data"
                },
                {
                    "container": "/etc/letsencrypt",
                    "bind": "/portainer/Files/AppData/Config/Nginx-Proxy-Manager/letsencrypt"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/nginx-proxy-manager.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Watchtower",
            "name": "watchtower",
            "image": "containrrr/watchtower:latest",
            "description": "A container-based solution for automating Docker container base image updates.",
            "categories": [
                "Docker"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "10808:8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock"
                }
            ],
            "env": [
                {
                    "name": "WATCHTOWER_LABEL_ENABLE",
                    "default": "true",
                    "label": "Filter by enable label",
                    "description": "Update containers that have a \"com.centurylinklabs.watchtower.enable\" label set to true."
                },
                {
                    "name": "TZ",
                    "default": "Europe/Paris",
                    "label": "Time Zone",
                    "description": "Sets the time zone to be used by WatchTower's logs and the optional Cron scheduling argument (--schedule). If this environment variable is not set, Watchtower will use the default time zone: UTC. To find out the right value, see this list, find your location and use the value in TZ Database Name, e.g Europe/Rome."
                },
                {
                    "name": "WATCHTOWER_CLEANUP",
                    "default": "true",
                    "label": "Cleanup",
                    "description": "Removes old images after updating. When this flag is specified, watchtower will remove the old image after restarting a container with a new image. Use this option to prevent the accumulation of orphaned images on your system as containers are updated."
                },
                {
                    "name": "DOCKER_HOST",
                    "default": "unix:///var/run/docker.sock",
                    "label": "Docker host",
                    "description": "Docker daemon socket to connect to. Can be pointed at a remote Docker host by specifying a TCP endpoint as \"tcp://hostname:port\"."
                },
                {
                    "name": "WATCHTOWER_NOTIFICATIONS",
                    "default": "gotify",
                    "label": "Notification Type"
                },
                {
                    "name": "WATCHTOWER_NOTIFICATION_GOTIFY_URL",
                    "default": "",
                    "label": "Gotify URL"
                },
                {
                    "name": "WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN",
                    "default": "",
                    "label": "Gotify Token"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/watchtower.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Wakapi",
            "name": "wakapi",
            "image": "ghcr.io/muety/wakapi:latest",
            "description": "A minimalist, self-hosted WakaTime-compatible backend for coding statistics.",
            "categories": [
                "Developpement"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8300:8300/tcp"
            ],
            "volumes": [
                {
                    "container": "/data",
                    "bind": "/portainer/Files/AppData/Config/Wakapi"
                }
            ],
            "env": [
                {
                    "name": "WAKAPI_PASSWORD_SALT",
                    "default": "",
                    "label": "WAKAPI_PASSWORD_SALT",
                    "description": "Pepper to use for password hashing"
                },
                {
                    "name": "WAKAPI_PORT",
                    "default": "8300",
                    "label": "WAKAPI_PORT",
                    "description": "Port to listen on"
                },
                {
                    "name": "WAKAPI_DB_TYPE",
                    "default": "",
                    "label": "WAKAPI_DB_TYPE",
                    "description": "Database type (one of sqlite3, mysql, postgres, cockroach)"
                },
                {
                    "name": "WAKAPI_DB_NAME",
                    "default": "",
                    "label": "WAKAPI_DB_NAME",
                    "description": "Database name"
                },
                {
                    "name": "WAKAPI_DB_HOST",
                    "default": "",
                    "label": "WAKAPI_DB_HOST",
                    "description": "Database host"
                },
                {
                    "name": "WAKAPI_DB_PORT",
                    "default": "",
                    "label": "WAKAPI_DB_PORT",
                    "description": "Database port"
                },
                {
                    "name": "WAKAPI_DB_USER",
                    "default": "",
                    "label": "WAKAPI_DB_USER",
                    "description": "Database user"
                },
                {
                    "name": "WAKAPI_DB_PASSWORD",
                    "default": "",
                    "label": "WAKAPI_DB_PASSWORD",
                    "description": "Database password"
                },
                {
                    "name": "WAKAPI_MAIL_ENABLED",
                    "default": "",
                    "label": "WAKAPI_MAIL_ENABLED",
                    "description": "Whether to allow Wakapi to send e-mail (e.g. for password resets)"
                },
                {
                    "name": "WAKAPI_MAIL_SENDER",
                    "default": "",
                    "label": "WAKAPI_MAIL_SENDER",
                    "description": "Default sender address for outgoing mails (ignored for MailWhale)"
                },
                {
                    "name": "WAKAPI_MAIL_PROVIDER",
                    "default": "",
                    "label": "WAKAPI_MAIL_PROVIDER",
                    "description": "Implementation to use for sending mails (one of [smtp, mailwhale])"
                },
                {
                    "name": "WAKAPI_MAIL_SMTP_HOST",
                    "default": "",
                    "label": "WAKAPI_MAIL_SMTP_HOST",
                    "description": "SMTP server address for sending mail (if using smtp mail provider)"
                },
                {
                    "name": "WAKAPI_MAIL_SMTP_PORT",
                    "default": "",
                    "label": "WAKAPI_MAIL_SMTP_PORT",
                    "description": "SMTP server port (usually 465)"
                },
                {
                    "name": "WAKAPI_MAIL_SMTP_USER",
                    "default": "",
                    "label": "WAKAPI_MAIL_SMTP_USER",
                    "description": "SMTP server authentication username"
                },
                {
                    "name": "WAKAPI_MAIL_SMTP_PASS",
                    "default": "",
                    "label": "WAKAPI_MAIL_SMTP_PASS",
                    "description": "SMTP server authentication password"
                },
                {
                    "name": "WAKAPI_EXPOSE_METRICS",
                    "default": "",
                    "label": "WAKAPI_EXPOSE_METRICS",
                    "description": "Whether to expose Prometheus metrics under /api/metrics"
                },
                {
                    "name": "WAKAPI_ALLOW_SIGNUP",
                    "default": "",
                    "label": "WAKAPI_ALLOW_SIGNUP",
                    "description": "Whether to enable user registration"
                },
                {
                    "name": "ENVIRONMENT",
                    "default": "production",
                    "label": "ENVIRONMENT",
                    "description": "Whether to use development- or production settings"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/wakapi.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Nextcloud Linuxserver.io",
            "name": "nextcloud",
            "image": "linuxserver/nextcloud:latest",
            "description": "Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices.",
            "categories": [
                "Files",
                "Cloud",
                "Web",
                "Sync",
                "Backup"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "9643:443/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Config/Nextcloud"
                },
                {
                    "container": "/data",
                    "bind": "/portainer/Files/AppData/Data/Onedrive"
                }
            ],
            "env": [
                {
                    "name": "PUID",
                    "default": "1000",
                    "label": "PUID"
                },
                {
                    "name": "PGID",
                    "default": "100",
                    "label": "PGID"
                },
                {
                    "name": "TZ",
                    "default": "Europe/Paris",
                    "label": "TZ"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/nextcloud.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Adminer",
            "name": "adminer",
            "image": "adminer:latest",
            "description": "Adminer (formerly phpMinAdmin) is a full-featured database management tool written in PHP. Conversely to phpMyAdmin, it consist of a single file ready to deploy to the target server. Adminer is available for MySQL, MariaDB, PostgreSQL, SQLite, MS SQL, Oracle, Elasticsearch, MongoDB and others via plugin.",
            "categories": [
                "Database",
                "Tools"
            ],
            "platform": "linux",
            "note": "Using the http version",
            "restart_policy": "unless-stopped",
            "ports": [
                "8432:8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/www/html/adminer.css",
                    "bind": "/portainer/Files/AppData/Config/PostgreSQL/adminer.css"
                },
                {
                    "container": "/var/www/html/plugins-enabled",
                    "bind": "/portainer/Files/AppData/Config/PostgreSQL/plugin"
                }
            ],
            "env": [
                {
                    "name": "ADMINER_PLUGINS",
                    "default": "",
                    "description": "This image bundles all official Adminer plugins. You can find the list of plugins on GitHub: https://github.com/vrana/adminer/tree/master/plugins.  To load plugins you can pass a list of filenames in ADMINER_PLUGINS",
                    "label": "ADMINER_PLUGINS"
                },
                {
                    "name": "ADMINER_DESIGN",
                    "default": "",
                    "description": "The image bundles all the designs that are available in the source package of adminer. You can find the list of designs on GitHub: https://github.com/vrana/adminer/tree/master/designs.  To use a bundled design you can pass its name in ADMINER_DESIGN",
                    "label": "ADMINER_DESIGN"
                },
                {
                    "name": "ADMINER_DEFAULT_SERVER",
                    "default": "",
                    "description": "You can specify the default host with the ADMINER_DEFAULT_SERVER environment variable. This is useful if you are connecting to an external server or a docker container named something other than the default db",
                    "label": "ADMINER_DEFAULT_SERVER"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/adminer.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "PGadmin",
            "name": "pgadmin",
            "image": "dpage/pgadmin4:latest",
            "description": "pgAdmin 4 is a web based administration tool for the PostgreSQL database. ",
            "categories": [
                "Database",
                "Tools"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8432:8432/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/pgadmin",
                    "bind": "/portainer/Files/AppData/Config/PGadmin"
                }
            ],
            "env": [
                {
                    "name": "PGADMIN_LISTEN_PORT",
                    "default": "8432",
                    "label": "PGADMIN_LISTEN_PORT",
                    "description": "Default: 80 or 443 (if TLS is enabled)  Allows the port that the server listens on to be set to a specific value rather than using the default."
                },
                {
                    "name": "PGADMIN_DEFAULT_EMAIL",
                    "default": "",
                    "label": "PGADMIN_DEFAULT_EMAIL",
                    "description": "This is the email address used when setting up the initial administrator account to login to pgAdmin. This variable is required and must be set at launch time."
                },
                {
                    "name": "PGADMIN_DEFAULT_PASSWORD",
                    "default": "",
                    "label": "PGADMIN_DEFAULT_PASSWORD",
                    "description": "This is the password used when setting up the initial administrator account to login to pgAdmin. This variable is required and must be set at launch time."
                },
                {
                    "name": "PGADMIN_DISABLE_POSTFIX",
                    "default": "true",
                    "label": "PGADMIN_DISABLE_POSTFIX",
                    "description": "Default: <null>  If left unset, a Postfix server will be started to deliver password reset emails.  If set to any value, the Postfix server will not be started, and pgAdmin will need to be configured to use an external mail server using the PGADMIN_CONFIG_ options below.  This option is useful if you’re running in an environment that prevents the use of sudo to start Postfix, or if you wish to use an external mail server."
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/pgadmin.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Redis",
            "name": "redis",
            "image": "redis:alpine",
            "description": "Redis is an open-source, networked, in-memory, key-value data store with optional durability. It is written in ANSI C. ",
            "categories": [
                "Database"
            ],
            "platform": "linux",
            "note": "You need to manualy set the memory limit in portainer",
            "restart_policy": "unless-stopped",
            "ports": [
                "6379:6379/tcp"
            ],
            "env": [
                {
                    "name": "PORT",
                    "default": "6379",
                    "label": "PORT"
                },
                {
                    "name": "PASS",
                    "default": "6G7qOtEcFsc4",
                    "label": "PASS"
                }
            ],
            "command": "redis-server --requirepass $PASS --port $PORT",
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/redis.png",
            "network_mode": "bridge",
            "mem_limit": "4096mo",
            "type": 1
        },
        {
            "title": "Redis No Pass",
            "name": "redis",
            "image": "redis:alpine",
            "description": "Redis is an open-source, networked, in-memory, key-value data store with optional durability. It is written in ANSI C. ",
            "categories": [
                "Database"
            ],
            "platform": "linux",
            "note": "You need to manualy set the memory limit in portainer",
            "restart_policy": "unless-stopped",
            "ports": [
                "6379:6379/tcp"
            ],
            "env": [
                {
                    "name": "PORT",
                    "default": "6379",
                    "label": "PORT"
                }
            ],
            "command": "redis-server --port $PORT",
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/redis.png",
            "network_mode": "bridge",
            "mem_limit": "4096mo",
            "type": 1
        },
        {
            "title": "Nextcloud Official FPM",
            "name": "nextcloud",
            "image": "nextcloud:stable-fpm",
            "description": "A safe home for all your data. Access & share your files, calendars, contacts, mail & more from any device, on your terms.",
            "categories": [
                "Files",
                "Cloud",
                "Web",
                "Backup",
                "Sync"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "9000:9000/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/www/html",
                    "bind": "/portainer/Files/AppData/Config/Nextcloud"
                },
                {
                    "container": "/var/www/html/config",
                    "bind": "/portainer/Files/AppData/Config/Nextcloud/config"
                },
                {
                    "container": "/var/www/html/data",
                    "bind": "/portainer/Files/AppData/Data/Nextcloud/data"
                },
                {
                    "container": "/var/www/html/themes",
                    "bind": "/portainer/Files/AppData/Config/Nextcloud/themes"
                },
                {
                    "container": "/var/www/html/custom_apps",
                    "bind": "/portainer/Files/AppData/Config/Nextcloud/custom_apps"
                }
            ],
            "env": [
                {
                    "name": "POSTGRES_DB",
                    "default": "",
                    "label": "POSTGRES_DB",
                    "description": "Name of the database using postgres"
                },
                {
                    "name": "POSTGRES_USER",
                    "default": "",
                    "label": "POSTGRES_USER",
                    "description": "Username for the database using postgres"
                },
                {
                    "name": "POSTGRES_PASSWORD",
                    "default": "",
                    "label": "POSTGRES_PASSWORD",
                    "description": "Password for the database user using postgres"
                },
                {
                    "name": "POSTGRES_HOST",
                    "default": "",
                    "description": "Hostname of the database server using postgres",
                    "label": "POSTGRES_HOST"
                },
                {
                    "name": "NEXTCLOUD_ADMIN_USER",
                    "default": "",
                    "label": "NEXTCLOUD_ADMIN_USER",
                    "description": "Name of the Nextcloud admin user"
                },
                {
                    "name": "NEXTCLOUD_ADMIN_PASSWORD",
                    "default": "",
                    "description": "Password for the Nextcloud admin user",
                    "label": "NEXTCLOUD_ADMIN_PASSWORD"
                },
                {
                    "name": "REDIS_HOST",
                    "default": "",
                    "label": "REDIS_HOST",
                    "description": "(not set by default) Name of Redis container"
                },
                {
                    "name": "REDIS_HOST_PORT",
                    "default": "",
                    "description": "(default: 6379) Optional port for Redis, only use for external Redis servers that run on non-standard ports.",
                    "label": "REDIS_HOST_PORT"
                },
                {
                    "name": "REDIS_HOST_PASSWORD",
                    "default": "",
                    "label": "REDIS_HOST_PASSWORD",
                    "description": "(not set by default) Redis password"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/nextcloud.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Rclone",
            "name": "rclone",
            "image": "rclone/rclone:latest",
            "description": "Rclone is a command-line program to manage files on cloud storage. It is a feature-rich alternative to cloud vendors' web storage interfaces. Over 40 cloud storage products support rclone including S3 object stores, business & consumer file storage services, as well as standard transfer protocols.",
            "categories": [
                "Files",
                "Backup",
                "Sync"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8554:8554/tcp"
            ],
            "volumes": [
                {
                    "container": "/config/rclone",
                    "bind": "/portainer/Files/AppData/Config/Rclone"
                },
                {
                    "container": "/data",
                    "bind": "/portainer/Files/AppData/Data/Rclone/data"
                }
            ],
            "command": "rcd --rc-web-gui --rc-addr :8554 --rc-htpasswd /config/rclone/.htpasswd --rc-enable-metrics --rc-web-gui-no-open-browser",
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/rclone.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Whoogle Search",
            "name": "whoogle",
            "image": "benbusby/whoogle-search:latest",
            "description": "Get Google search results, but without any ads, javascript, AMP links, cookies, or IP address tracking. Easily deployable in one click as a Docker app, and customizable with a single config file. Quick and simple to implement as a primary search engine replacement on both desktop and mobile.",
            "categories": [
                "Search",
                "Web"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8005:8005/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Config/Whoogle"
                }
            ],
            "env": [
                {
                    "name": "EXPOSE_PORT",
                    "default": "8005",
                    "label": "EXPOSE_PORT",
                    "description": "The port where Whoogle will be exposed."
                },
                {
                    "name": "HTTPS_ONLY",
                    "default": "0",
                    "label": "HTTPS_ONLY",
                    "description": "Enforce HTTPS."
                },
                {
                    "name": "WHOOGLE_AUTOCOMPLETE",
                    "default": "1",
                    "label": "WHOOGLE_AUTOCOMPLETE",
                    "description": "Controls visibility of autocomplete/search suggestions. Default on -- use '0' to disable."
                },
                {
                    "name": "WHOOGLE_CONFIG_DISABLE",
                    "default": "0",
                    "label": "WHOOGLE_CONFIG_DISABLE",
                    "description": "Hide config from UI and disallow changes to config by client"
                },
                {
                    "name": "WHOOGLE_CONFIG_LANGUAGE\t",
                    "default": "fr",
                    "label": "WHOOGLE_CONFIG_LANGUAGE\t",
                    "description": "Set interface language"
                },
                {
                    "name": "WHOOGLE_CONFIG_THEME",
                    "default": "light",
                    "label": "WHOOGLE_CONFIG_THEME",
                    "description": "Set theme mode (light, dark, or system)"
                },
                {
                    "name": "WHOOGLE_CONFIG_ALTS",
                    "default": "0",
                    "label": "WHOOGLE_CONFIG_ALTS",
                    "description": "Use social media site alternatives (nitter, invidious, etc)"
                },
                {
                    "name": "WHOOGLE_CONFIG_VIEW_IMAGE",
                    "default": "1",
                    "label": "WHOOGLE_CONFIG_VIEW_IMAGE",
                    "description": "Enable View Image option"
                },
                {
                    "name": "WHOOGLE_CONFIG_GET_ONLY",
                    "default": "1",
                    "description": "Search using GET requests only",
                    "label": "WHOOGLE_CONFIG_GET_ONLY"
                },
                {
                    "name": "WHOOGLE_CONFIG_URL",
                    "default": ":root { /* LIGHT THEME COLORS */ --whoogle-logo: #4c4f69; --whoogle-page-bg: #eff1f5; --whoogle-element-bg: #bcc0cc; --whoogle-text: #4c4f69; --whoogle-contrast-text: #5c5f77; --whoogle-secondary-text: #6c6f85; --whoogle-result-bg: #ccd0da; --whoogle-result-title: #7287fd; --whoogle-result-url: #dc8a78; --whoogle-result-visited: #e64553; } #whoogle-w { fill: #1e66f5; } #whoogle-h { fill: #d20f39; } #whoogle-o-1 { fill: #df8e1d; } #whoogle-o-2 { fill: #1e66f5; } #whoogle-g { fill: #40a02b; } #whoogle-l { fill: #d20f39; } #whoogle-e { fill: #df8e1d; }",
                    "label": "WHOOGLE_CONFIG_URL",
                    "description": "The root url of the instance (https://<your url>/)"
                },
                {
                    "name": "WHOOGLE_TOR_SERVICE",
                    "default": "0",
                    "label": "WHOOGLE_TOR_SERVICE",
                    "description": "Enable/disable the Tor service on startup. Default on -- use '0' to disable."
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/whooglesearch.png",
            "network_mode": "host",
            "type": 1
        },
        {
            "title": "N8N PostgreSQL",
            "name": "n8n",
            "image": "n8nio/n8n:latest",
            "description": "The workflow automation platform that doesn't box you in, that you never outgrow",
            "categories": [
                "Automations",
                "Web"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "5678:5678/tcp"
            ],
            "volumes": [
                {
                    "container": "/home/node/.n8n",
                    "bind": "/portainer/Files/AppData/Config/N8N"
                }
            ],
            "env": [
                {
                    "name": "DB_TYPE",
                    "default": "postgresdb",
                    "label": "DB_TYPE"
                },
                {
                    "name": "DB_POSTGRESDB_DATABASE",
                    "default": "",
                    "label": "DB_POSTGRESDB_DATABASE"
                },
                {
                    "name": "DB_POSTGRESDB_HOST",
                    "default": "",
                    "label": "DB_POSTGRESDB_HOST"
                },
                {
                    "name": "DB_POSTGRESDB_PORT",
                    "default": "",
                    "label": "DB_POSTGRESDB_PORT"
                },
                {
                    "name": "DB_POSTGRESDB_USER",
                    "default": "",
                    "label": "DB_POSTGRESDB_USER"
                },
                {
                    "name": "DB_POSTGRESDB_SCHEMA",
                    "default": "",
                    "label": "DB_POSTGRESDB_SCHEMA"
                },
                {
                    "name": "DB_POSTGRESDB_PASSWORD",
                    "default": "",
                    "label": "DB_POSTGRESDB_PASSWORD"
                },
                {
                    "name": "GENERIC_TIMEZONE",
                    "default": "Europe/Paris",
                    "label": "GENERIC_TIMEZONE"
                },
                {
                    "name": "TZ",
                    "default": "Europe/Paris",
                    "label": "TZ"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/n8n.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "N8N MySQL",
            "name": "n8n",
            "image": "n8nio/n8n:latest",
            "description": "The workflow automation platform that doesn't box you in, that you never outgrow",
            "categories": [
                "Automations",
                "Web"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "5678:5678/tcp"
            ],
            "volumes": [
                {
                    "container": "/home/node/.n8n",
                    "bind": "/portainer/Files/AppData/Config/N8N"
                }
            ],
            "env": [
                {
                    "name": "DB_TYPE",
                    "default": "mysqldb",
                    "label": "DB_TYPE"
                },
                {
                    "name": "DB_MYSQLDB_DATABASE",
                    "default": "",
                    "label": "DB_MYSQLDB_DATABASE"
                },
                {
                    "name": "DB_MYSQLDB_HOST",
                    "default": "",
                    "label": "DB_MYSQLDB_HOST"
                },
                {
                    "name": "DB_MYSQLDB_PORT",
                    "default": "",
                    "label": "DB_MYSQLDB_PORT"
                },
                {
                    "name": "DB_MYSQLDB_USER",
                    "default": "",
                    "label": "DB_MYSQLDB_USER"
                },
                {
                    "name": "DB_MYSQLDB_PASSWORD",
                    "default": "",
                    "label": "DB_MYSQLDB_PASSWORD"
                },
                {
                    "name": "GENERIC_TIMEZONE",
                    "default": "Europe/Paris",
                    "label": "GENERIC_TIMEZONE"
                },
                {
                    "name": "TZ",
                    "default": "Europe/Paris",
                    "label": "TZ"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/n8n.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Firefox",
            "name": "firefox",
            "image": "jlesage/firefox:latest",
            "description": "This is a Docker container for Firefox.\n\nThe GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client.",
            "categories": [
                "Web",
                "Client"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "5800:5800/tcp",
                "5900:5900/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Config/Firefox"
                },
                {
                    "container": "/config/downloads",
                    "bind": "/portainer/Files/AppData/Data/Firefox/downloads"
                }
            ],
            "env": [
                {
                    "name": "LANG",
                    "default": "fr_FR.UTF-8",
                    "label": "LANG",
                    "description": "Set the locale, which defines the application's language, if supported. Format of the locale is language[_territory][.codeset], where language is an ISO 639 language code, territory is an ISO 3166 country code and codeset is a character set, like UTF-8. For example, Australian English using the UTF-8 encoding is en_AU.UTF-8."
                },
                {
                    "name": "TZ",
                    "default": "Europe/Paris",
                    "label": "TZ",
                    "description": "TimeZone used by the container. Timezone can also be set by mapping /etc/localtime between the host and the container."
                },
                {
                    "name": "KEEP_APP_RUNNING",
                    "default": "1",
                    "label": "KEEP_APP_RUNNING",
                    "description": "When set to 1, the application will be automatically restarted when it crashes or terminates."
                },
                {
                    "name": "DARK_MODE",
                    "default": "1",
                    "label": "DARK_MODE",
                    "description": "When set to 1, dark mode is enabled for the application."
                },
                {
                    "name": "WEB_LISTENING_PORT",
                    "default": "5800",
                    "label": "WEB_LISTENING_PORT",
                    "description": "Port used by the web server to serve the UI of the application. This port is used internally by the container and it is usually not required to be changed. By default, a container is created with the default bridge network, meaning that, to be accessible, each internal container port must be mapped to an external port (using the -p or --publish argument). However, if the container is created with another network type, changing the port used by the container might be useful to prevent conflict with other services/containers. NOTE: a value of -1 disables listening, meaning that the application's UI won't be accessible over HTTP/HTTPs."
                },
                {
                    "name": "VNC_LISTENING_PORT",
                    "default": "5900",
                    "label": "VNC_LISTENING_PORT",
                    "description": "Port used by the VNC server to serve the UI of the application. This port is used internally by the container and it is usually not required to be changed. By default, a container is created with the default bridge network, meaning that, to be accessible, each internal container port must be mapped to an external port (using the -p or --publish argument). However, if the container is created with another network type, changing the port used by the container might be useful to prevent conflict with other services/containers. NOTE: a value of -1 disables listening, meaning that the application's UI won't be accessible over VNC."
                },
                {
                    "name": "VNC_PASSWORD",
                    "default": "",
                    "label": "VNC_PASSWORD",
                    "description": "Password needed to connect to the application's GUI. See the VNC Password section for more details."
                },
                {
                    "name": "FF_OPEN_URL",
                    "default": "",
                    "label": "FF_OPEN_URL",
                    "description": "The URL to open when Firefox starts."
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/firefox.png",
            "network_mode": "host",
            "type": 1
        },
        {
            "title": "Chadburn",
            "name": "chadburn",
            "image": "premoweb/chadburn:latest",
            "description": "Chadburn is a modern and low footprint job scheduler for docker environments, written in Go. Chadburn aims to be a replacement for the old fashioned cron.",
            "categories": [
                "Automation",
                "Docker"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "volumes": [
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock"
                },
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Config/Chadburn"
                }
            ],
            "command": "daemon --config=/config/config.ini",
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/docker.png",
            "type": 1
        },
        {
            "title": "FerretDB",
            "name": "ferretdb",
            "image": "ghcr.io/ferretdb/ferretdb:latest",
            "description": "FerretDB (formerly MangoDB) is an open-source proxy that translates MongoDB wire protocol queries to SQL, with PostgreSQL as the database engine.",
            "categories": [
                "Database"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "27017:27017/tcp"
            ],
            "env": [
                {
                    "name": "FERRETDB_POSTGRESQL_URL",
                    "default": "",
                    "label": "FERRETDB_POSTGRESQL_URL",
                    "description": "PostgreSQL URL for pg handler"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/ferretdb-white.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "MongoDB",
            "name": "mongodb",
            "image": "mongo:latest",
            "description": "MongoDB is a free and open-source cross-platform document-oriented database program.",
            "categories": [
                "Database"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "27017:27017/tcp"
            ],
            "volumes": [
                {
                    "container": "/data/db",
                    "bind": "/portainer/Files/AppData/Data/MongoDB"
                }
            ],
            "env": [
                {
                    "name": "MONGO_INITDB_ROOT_USERNAME",
                    "default": "",
                    "label": "MONGO_INITDB_ROOT_USERNAME"
                },
                {
                    "name": "MONGO_INITDB_ROOT_PASSWORD",
                    "default": "",
                    "label": "MONGO_INITDB_ROOT_PASSWORD"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/mongodb.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Gitea",
            "name": "gitea",
            "image": "gitea/gitea:latest",
            "description": "Gitea est un service Git auto-hébergé très simple à installer et à utiliser. Il est similaire à GitHub, Bitbucket ou Gitlab",
            "categories": [
                "Devellopement",
                "Git"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8069:3000/tcp",
                "2222:22/tcp"
            ],
            "volumes": [
                {
                    "container": "/data",
                    "bind": "/portainer/Files/AppData/Data/Gitea"
                },
                {
                    "container": "/data/gitea/conf",
                    "bind": "/portainer/Files/AppData/Config/Gitea"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/gitea.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Wireguard-UI",
            "name": "wireguard-ui",
            "image": "ngoduykhanh/wireguard-ui:latest",
            "description": "A web user interface to manage your WireGuard setup.",
            "categories": [
                "VPN",
                "Web"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8073:5000/tcp"
            ],
            "volumes": [
                {
                    "container": "/etc/wireguard",
                    "bind": "/etc/wireguard"
                },
                {
                    "container": "/app",
                    "bind": "/portainer/Files/AppData/Config/Wireguard"
                }
            ],
            "env": [
                {
                    "name": "SESSION_SECRET",
                    "default": "",
                    "label": "SESSION_SECRET",
                    "description": "The secret key used to encrypt the session cookies. Set this to a random value."
                },
                {
                    "name": "WGUI_PASSWORD_HASH",
                    "default": "",
                    "label": "WGUI_PASSWORD_HASH",
                    "description": "The password hash for the user on the login page. (alternative to WGUI_PASSWORD). Used for db initialization only"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/wireguard.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "WireGuard Easy",
            "name": "wg-easy",
            "image": "weejewel/wg-easy:latest",
            "description": "You have found the easiest way to install & manage WireGuard on any Linux host!",
            "categories": [
                "VPN",
                "Web"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "51820:51820/udp",
                "51821:51821/tcp"
            ],
            "volumes": [
                {
                    "container": "/etc/wireguard",
                    "bind": "/portainer/Files/AppData/Config/Wireguard"
                }
            ],
            "env": [
                {
                    "name": "PASSWORD",
                    "default": "",
                    "label": "PASSWORD",
                    "description": "When set, requires a password when logging in to the Web UI."
                },
                {
                    "name": "WG_HOST",
                    "default": "",
                    "label": "WG_HOST",
                    "description": "The public hostname of your VPN server."
                },
                {
                    "name": "WG_DEFAULT_ADDRESS",
                    "default": "10.69.0.x",
                    "label": "WG_DEFAULT_ADDRESS",
                    "description": "Clients IP address range."
                },
                {
                    "name": "WG_DEFAULT_DNS",
                    "default": "1.1.1.1, 1.0.0.1",
                    "description": "DNS server clients will use.",
                    "label": "WG_DEFAULT_DNS"
                }
            ],
            "cap_add": [
                "NET_ADMIN",
                "SYS_MODULE"
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/wireguard.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "QBittorrent (linuxserver)",
            "name": "qbittorrent",
            "image": "lscr.io/linuxserver/qbittorrent:latest",
            "description": "qBittorrent is a bittorrent client programmed in C++ / Qt that uses libtorrent (sometimes called libtorrent-rasterbar) by Arvid Norberg.",
            "categories": [
                "Downloads",
                "Web",
                "Torrents"
            ],
            "platform": "linux",
            "note": "Libtorrent V2",
            "restart_policy": "unless-stopped",
            "ports": [
                "8093:8093/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Config/QBittorent"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/Files/AppData/Data/QBittorent/downloads"
                }
            ],
            "env": [
                {
                    "name": "TZ",
                    "default": "Europe/Paris",
                    "label": "TZ"
                },
                {
                    "name": "WEBUI_PORT",
                    "default": "8093",
                    "label": "WEBUI_PORT"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/qbittorrent.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "QBittorrent (hotio)",
            "name": "qbittorrent",
            "image": "hotio/qbittorrent:latest",
            "description": "qBittorrent is a bittorrent client programmed in C++ / Qt that uses libtorrent (sometimes called libtorrent-rasterbar) by Arvid Norberg. With Vuetorrent and vpn included (https://hotio.dev/containers/qbittorrent/)",
            "categories": [
                "Downloads",
                "Web",
                "Torrents"
            ],
            "platform": "linux",
            "note": "Libtorrent V1",
            "restart_policy": "unless-stopped",
            "ports": [
                "8093:8093/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Config/QBittorent"
                }
            ],
            "env": [
                {
                    "name": "TZ",
                    "default": "Europe/Paris",
                    "label": "TZ"
                },
                {
                    "name": "WEBUI_PORTS",
                    "default": "8093/tcp,8093/udp",
                    "label": "WEBUI_PORTS"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/qbittorrent.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Transmission",
            "name": "transmission",
            "image": "lscr.io/linuxserver/transmission:latest",
            "description": "Transmission is designed for easy, powerful use. We've set the defaults to just work and it only takes a few clicks to configure advanced features like watch directories, bad peer blocklists, and the web interface. When Ubuntu chose Transmission as its default BitTorrent client, one of the most-cited reasons was its easy learning curve.",
            "categories": [
                "Downloads",
                "Web",
                "Torrents"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "9091:9091/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Config/Transmission"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/Files/AppData/Data/Transmission/downloads"
                },
                {
                    "container": "/watch",
                    "bind": "/portainer/Files/AppData/Data/Transmission/watch"
                }
            ],
            "env": [
                {
                    "name": "TZ",
                    "default": "Europe/Paris",
                    "label": "TZ",
                    "description": "specify a timezone to use, see this https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List"
                },
                {
                    "name": "USER",
                    "default": "",
                    "label": "USER",
                    "description": "Specify an optional username for the interface"
                },
                {
                    "name": "PASS",
                    "default": "",
                    "label": "PASS",
                    "description": "Specify an optional password for the interface"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/transmission.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Flood",
            "name": "flood",
            "image": "jesec/flood:latest",
            "description": "Flood is a monitoring service for various torrent clients. It's a Node.js service that communicates with your favorite torrent client and serves a decent web UI for administration.",
            "categories": [
                "Web",
                "Torrents",
                "UI"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/data",
                    "bind": "/portainer/Files/AppData/Config/Flood"
                }
            ],
            "env": [
                {
                    "name": "FLOOD_OPTION_port",
                    "default": "3000",
                    "label": "FLOOD_OPTION_port"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/flood.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Filebrowser",
            "name": "filebrowser",
            "image": "hurlenko/filebrowser:latest",
            "description": "Filebrowser provides a file managing interface within a specified directory and it can be used to upload, delete, preview, rename and edit your files. It allows the creation of multiple users and each user can have its own directory. It can be used as a standalone app or as a middleware.",
            "categories": [
                "Files",
                "Web"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8932:8932/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Config/Filebrowser"
                },
                {
                    "container": "/data",
                    "bind": ""
                }
            ],
            "env": [
                {
                    "name": "FB_PORT",
                    "default": "8932",
                    "label": "FB_PORT"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/filebrowser.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "PyLoad",
            "name": "pyload",
            "image": "lscr.io/linuxserver/pyload-ng:latest",
            "description": "pyLoad is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.",
            "categories": [
                "Web",
                "Downloads"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8000:8000/tcp",
                "9666:9666/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Config/Pyload"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/Downloads/Pyload"
                }
            ],
            "env": [
                {
                    "name": "TZ",
                    "default": "Europe/Paris",
                    "label": "TZ"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/pyload.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "QuestDB",
            "name": "questdb",
            "image": "questdb/questdb:latest",
            "description": "Columnar time-series database with high performance ingestion and SQL analytics you know and love from QuestDB open source, now on the cloud.",
            "categories": [
                "Database"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "9000:9000/tcp",
                "9009:9009/tcp",
                "8812:8812/tcp",
                "9003:9003/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/questdb/config",
                    "bind": "/portainer/Files/AppData/Config/QuestDB"
                },
                {
                    "container": "/var/lib/questdb",
                    "bind": "/portainer/Files/AppData/Data/QuestDB"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/questdb.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "What's up Docker ?",
            "name": "wud",
            "image": "fmartinou/whats-up-docker:latest",
            "description": "Gets you notified when new versions of your Docker containers are available and lets you react the way you want.",
            "categories": [
                "Docker",
                "Monitoring"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/store",
                    "bind": "/portainer/Files/AppData/Config/WUP"
                },
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock"
                }
            ],
            "env": [
                {
                    "name": "WUD_SERVER_PORT",
                    "default": "3000",
                    "label": "WUD_SERVER_PORT",
                    "description": "Http listener port"
                },
                {
                    "name": "TZ",
                    "default": "Europe/Paris",
                    "label": "TZ",
                    "description": "Timezone"
                },
                {
                    "name": "WUD_AUTH_BASIC_ADMIN_USER",
                    "default": "",
                    "label": "WUD_AUTH_BASIC_ADMIN_USER",
                    "description": "Username"
                },
                {
                    "name": "WUD_AUTH_BASIC_ADMIN_HASH\t",
                    "default": "",
                    "label": "WUD_AUTH_BASIC_ADMIN_HASH\t",
                    "description": "Htpasswd compliant hash"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/whats-up-docker.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Headscale",
            "name": "headscale",
            "image": "headscale/headscale:latest",
            "description": "An open source, self-hosted implementation of the Tailscale control server.",
            "categories": [
                "VPN"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "volumes": [
                {
                    "container": "/etc/headscale",
                    "bind": "/portainer/Files/AppData/Config/Headscale"
                }
            ],
            "command": "headscale serve",
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/tailscale.png",
            "network_mode": "host",
            "type": 1
        },
        {
            "title": "Doku",
            "name": "doku",
            "image": "amerkurev/doku:latest",
            "description": "Doku is a simple, lightweight web-based application that allows you to monitor Docker disk usage in a user-friendly manner. The Doku displays the amount of disk space used by the Docker daemon, splits by images, containers, volumes, and builder cache. If you're lucky, you'll also see the sizes of log files :)",
            "categories": [
                "Docker",
                "Web"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "9090:9090/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock"
                },
                {
                    "container": "/hostroot",
                    "bind": "/"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/docker.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Authentik Proxy Outpost",
            "name": "authentik_proxy_outpost",
            "image": "ghcr.io/goauthentik/proxy:latest",
            "description": "An outpost is a single deployment of an authentik component, which can be deployed in a completely separate environment: Proxy",
            "categories": [
                "Web",
                "Security"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "9000:9000/tcp",
                "9443:9443/tcp"
            ],
            "env": [
                {
                    "name": "AUTHENTIK_HOST",
                    "default": "",
                    "label": "AUTHENTIK_HOST"
                },
                {
                    "name": "AUTHENTIK_INSECURE",
                    "default": "",
                    "label": "AUTHENTIK_INSECURE"
                },
                {
                    "name": "AUTHENTIK_TOKEN",
                    "default": "",
                    "label": "AUTHENTIK_TOKEN"
                },
                {
                    "name": "AUTHENTIK_HOST_BROWSER",
                    "default": "",
                    "label": "AUTHENTIK_HOST_BROWSER"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/authentik.png",
            "network_mode": "host",
            "type": 1
        },
        {
            "title": "InfluxDB",
            "name": "influxdb",
            "image": "influxdb:latest",
            "description": "InfluxDB is a time series database built from the ground up to handle high write and query loads. InfluxDB is meant to be used as a backing store for any use case involving large amounts of timestamped data, including DevOps monitoring, application metrics, IoT sensor data, and real-time analytics.",
            "categories": [
                "Database"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8086:8086/tcp",
                "2003:2003/tcp"
            ],
            "volumes": [
                {
                    "container": "/etc/influxdb2",
                    "bind": "/portainer/Files/AppData/Config/InfluxDB"
                },
                {
                    "container": "/var/lib/influxdb2",
                    "bind": "/portainer/Files/AppData/Data/InfluxDB"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/influxdb.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Tailscale DERP",
            "name": "tsderp",
            "image": "fredliang/derper:latest",
            "description": "Tailscale runs DERP relay servers distributed around the world to link your Tailscale nodes peer-to-peer as a side channel during NAT traversal, and as a fallback in case NAT traversal fails and a direct connection cannot be established.",
            "categories": [
                "VPN"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "10444:10444/tcp",
                "3478:3478/udp"
            ],
            "volumes": [
                {
                    "container": "/app/certs/fullchain.pem",
                    "bind": ""
                },
                {
                    "container": "/app/certs/privkey.pem",
                    "bind": ""
                },
                {
                    "container": "/var/run/tailscale/tailscaled.sock",
                    "bind": "/var/run/tailscale/tailscaled.sock"
                }
            ],
            "env": [
                {
                    "name": "DERP_DOMAIN",
                    "default": "",
                    "label": "DERP_DOMAIN",
                    "description": "derper server hostname"
                },
                {
                    "name": "DERP_CERT_DIR",
                    "default": "/app/certs",
                    "label": "DERP_CERT_DIR",
                    "description": "directory to store LetsEncrypt certs(if addr's port is :443)"
                },
                {
                    "name": "DERP_CERT_MODE",
                    "default": "manual",
                    "label": "DERP_CERT_MODE",
                    "description": "mode for getting a cert. possible options: manual, letsencrypt"
                },
                {
                    "name": "DERP_ADDR",
                    "default": ":10444",
                    "label": "DERP_ADDR",
                    "description": "listening server address"
                },
                {
                    "name": "DERP_STUN",
                    "default": "true",
                    "label": "DERP_STUN",
                    "description": "also run a STUN server"
                },
                {
                    "name": "DERP_STUN_PORT",
                    "default": "3478",
                    "label": "DERP_STUN_PORT",
                    "description": "The UDP port on which to serve STUN."
                },
                {
                    "name": "DERP_HTTP_PORT",
                    "default": "-1",
                    "label": "DERP_HTTP_PORT",
                    "description": "The port on which to serve HTTP. Set to -1 to disable"
                },
                {
                    "name": "DERP_VERIFY_CLIENTS",
                    "default": "true",
                    "label": "DERP_VERIFY_CLIENTS",
                    "description": "verify clients to this DERP server through a local tailscaled instance"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/tailscale.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Vaultwarden",
            "name": "vaultwarden",
            "image": "vaultwarden/server:latest",
            "description": "Alternative implementation of the Bitwarden server API written in Rust and compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.",
            "categories": [
                "Web",
                "Security"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8196:8196/tcp"
            ],
            "volumes": [
                {
                    "container": "/data",
                    "bind": "/portainer/Files/AppData/Data/Vaultwarden/data"
                },
                {
                    "container": "/web-vault",
                    "bind": "/portainer/Files/AppData/Config/Vaultwarden/web-vault"
                }
            ],
            "env": [
                {
                    "name": "ROCKET_PORT",
                    "default": "8196",
                    "label": "ROCKET_PORT"
                },
                {
                    "name": "DATABASE_URL",
                    "default": "postgresql://user:password@host[:port]/database_name",
                    "label": "DATABASE_URL"
                },
                {
                    "name": "PUSH_INSTALLATION_ID",
                    "default": "",
                    "label": "PUSH_INSTALLATION_ID",
                    "description": "Enables push notifications (requires key and id from https://bitwarden.com/host)"
                },
                {
                    "name": "PUSH_INSTALLATION_KEY",
                    "default": "",
                    "label": "PUSH_INSTALLATION_KEY",
                    "description": "Enables push notifications (requires key and id from https://bitwarden.com/host)"
                },
                {
                    "name": "SIGNUPS_ALLOWED",
                    "default": "false",
                    "label": "SIGNUPS_ALLOWED",
                    "description": "Controls if new users can register"
                },
                {
                    "name": "ADMIN_TOKEN",
                    "default": "",
                    "label": "ADMIN_TOKEN",
                    "description": "Token for the admin interface, preferably an Argon2 PCH string"
                },
                {
                    "name": "DOMAIN",
                    "default": "",
                    "label": "DOMAIN",
                    "description": "The domain must match the address from where you access the server"
                },
                {
                    "name": "SMTP_HOST",
                    "default": "",
                    "label": "SMTP_HOST"
                },
                {
                    "name": "SMTP_FROM",
                    "default": "",
                    "label": "SMTP_FROM"
                },
                {
                    "name": "SMTP_SECURITY",
                    "default": "",
                    "label": "SMTP_SECURITY",
                    "description": "(\"starttls\", \"force_tls\", \"off\") Enable a secure connection. Default is \"starttls\" (Explicit - ports 587 or 25), \"force_tls\" (Implicit - port 465) or \"off\", no encryption (port 25)"
                },
                {
                    "name": "SMTP_PORT",
                    "default": "",
                    "label": "SMTP_PORT",
                    "description": "Ports 587 (submission) and 25 (smtp) are standard without encryption and with encryption via STARTTLS (Explicit TLS). Port 465 (submissions) is used for encrypted submission (Implicit TLS)."
                },
                {
                    "name": "SMTP_USERNAME",
                    "default": "",
                    "label": "SMTP_USERNAME"
                },
                {
                    "name": "SMTP_PASSWORD",
                    "default": "",
                    "label": "SMTP_PASSWORD"
                },
                {
                    "name": "HIBP_API_KEY",
                    "default": "",
                    "label": "HIBP_API_KEY",
                    "description": "HaveIBeenPwned API Key, request it here: https://haveibeenpwned.com/API/Key"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/vaultwarden.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Coder",
            "name": "coder",
            "image": "ghcr.io/coder/coder:latest",
            "description": "Coder is an open-source platform for creating and managing developer workspaces on your preferred clouds and servers.",
            "categories": [
                "Dev",
                "Vpn",
                "Web"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8686:8686/tcp"
            ],
            "env": [
                {
                    "name": "CODER_ADDRESS",
                    "default": "0.0.0.0:8686",
                    "label": "CODER_ADDRESS"
                },
                {
                    "name": "CODER_ACCESS_URL",
                    "default": "",
                    "label": "CODER_ACCESS_URL"
                },
                {
                    "name": "CODER_WILDCARD_ACCESS_URL",
                    "default": "",
                    "label": "CODER_WILDCARD_ACCESS_URL"
                },
                {
                    "name": "CODER_PG_CONNECTION_URL",
                    "default": "postgresql://user:password@host[:port]/database_name",
                    "label": "CODER_PG_CONNECTION_URL"
                },
                {
                    "name": "CODER_SECURE_AUTH_COOKIE",
                    "default": "true",
                    "label": "CODER_SECURE_AUTH_COOKIE"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/coder.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Firefox Linuxserver",
            "name": "firefox-linuxserver",
            "image": "lscr.io/linuxserver/firefox:latest",
            "description": "Firefox Browser, also known as Mozilla Firefox or simply Firefox, is a free and open-source web browser developed by the Mozilla Foundation and its subsidiary, the Mozilla Corporation. Firefox uses the Gecko layout engine to render web pages, which implements current and anticipated web standards.",
            "categories": [
                "Web",
                "Client"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "6800:6800/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Config/Firefox/"
                },
                {
                    "container": "/config/Downloads",
                    "bind": "/portainer/Files/AppData/Data/Firefox/"
                }
            ],
            "env": [
                {
                    "name": "CUSTOM_PORT",
                    "default": "6800",
                    "label": "CUSTOM_PORT",
                    "description": "Internal port the container listens on for http if it needs to be swapped from the default 3000."
                },
                {
                    "name": "CUSTOM_HTTPS_PORT",
                    "default": "6801",
                    "label": "CUSTOM_HTTPS_PORT",
                    "description": "Internal port the container listens on for https if it needs to be swapped from the default 3001."
                },
                {
                    "name": "CUSTOM_USER",
                    "default": "root",
                    "description": "HTTP Basic auth username, abc is default.",
                    "label": "CUSTOM_USER"
                },
                {
                    "name": "PASSWORD",
                    "default": "",
                    "label": "PASSWORD",
                    "description": "HTTP Basic auth password, abc is default. If unset there will be no auth."
                },
                {
                    "name": "TITLE",
                    "default": "Firefox",
                    "label": "TITLE",
                    "description": "The page title displayed on the web browser, default \"KasmVNC Client\"."
                },
                {
                    "name": "DRINODE",
                    "default": "/dev/dri/renderD128",
                    "label": "DRINODE",
                    "description": "If mounting in /dev/dri for DRI3 GPU Acceleration allows you to specify the device to use IE /dev/dri/renderD128"
                },
                {
                    "name": "TZ",
                    "default": "Europe/Paris",
                    "label": "TZ"
                }
            ],
            "devices": [
                {
                    "container": "/dev/dri",
                    "host": "/dev/dri"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/firefox.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Dozzle",
            "name": "dozzle",
            "image": "amir20/dozzle:latest",
            "description": "Dozzle is open-sourced project sponsored by Docker OSS. It is a log viewer designed to simplify the process of monitoring and debugging containers. It is a lightweight, web-based application that provides real-time log streaming, filtering, and searching capabilities through an intuitive user interface.",
            "categories": [
                "Docker",
                "Monitoring"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "9632:9632/tcp"
            ],
            "env": [
                {
                    "name": "DOZZLE_ADDR",
                    "default": ":9632",
                    "label": "DOZZLE_ADDR"
                },
                {
                    "name": "DOZZLE_HOSTNAME",
                    "default": "",
                    "label": "DOZZLE_HOSTNAME"
                },
                {
                    "name": "DOZZLE_REMOTE_HOST",
                    "default": "",
                    "label": "DOZZLE_REMOTE_HOST"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/dozzle.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Headscale-Panel",
            "name": "headscale-panel",
            "image": "yqhdocker/headscale-panel:latest",
            "description": "https://github.com/QianheYu/headscale-panel",
            "categories": [
                "VPN",
                "Web"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8088:8088/tcp"
            ],
            "volumes": [
                {
                    "container": "/etc/headscale-panel",
                    "bind": "/portainer/Files/AppData/Config/Headscale-Panel"
                },
                {
                    "container": "/etc/headscale",
                    "bind": "/portainer/Files/AppData/Config/Headscale"
                },
                {
                    "container": "/caddy",
                    "bind": "/portainer/Files/AppData/Config/Caddy/data/caddy"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/tailscale.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Node-RED",
            "name": "nodered",
            "image": "nodered/node-red:latest",
            "description": "Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.\nIt provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click.",
            "categories": [
                "Automations",
                "Web"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "1880:1880/tcp"
            ],
            "volumes": [
                {
                    "container": "/data",
                    "bind": "/portainer/Files/AppData/Data/Node-RED/"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/node-red.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Navidrome",
            "name": "navidrome",
            "image": "deluan/navidrome:latest",
            "description": "Navidrome is an open source web-based music collection server and streamer. It gives you freedom to listen to your music collection from any browser or mobile device. It's like your personal Spotify!",
            "categories": [
                "Media",
                "Music",
                "Web"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "4533:4533/tcp"
            ],
            "volumes": [
                {
                    "container": "/data",
                    "bind": "/portainer/Files/AppData/Config/Navidrome"
                },
                {
                    "container": "/music",
                    "bind": "/portainer/Files/Music/"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/navidrome.png ",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Repomanager",
            "name": "repomanager",
            "image": "lbr38/repomanager:latest",
            "description": "Repomanager is a web mirroring tool for RPM or DEB packages repositories.\nDesigned for an enterprise usage and to help deployment of packages updates on large Linux servers farms, it can create mirrors of public repositories (eg. Debian or CentOS official repos or third-party editors) and manage several snapshots versions and environments.",
            "categories": [
                "Web",
                "Package",
                "Distribution"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8016:8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/repomanager",
                    "bind": "/portainer/Files/AppData/Config/Repomanager"
                },
                {
                    "container": "/home/repo",
                    "bind": "/portainer/Files/AppData/Data/Repomanager"
                }
            ],
            "env": [
                {
                    "name": "FQDN",
                    "default": "",
                    "label": "FQDN",
                    "description": "Fully Qualified Domain Name of the Repomanager server."
                },
                {
                    "name": "MAX_UPLOAD_SIZE",
                    "default": "128M",
                    "label": "MAX_UPLOAD_SIZE",
                    "description": "Max upload size in MB (default 32). Increase this value if you want to upload large packages to your repos."
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/stash.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Jackett",
            "name": "jackett",
            "image": "lscr.io/linuxserver/jackett:latest",
            "description": "Jackett works as a proxy server: it translates queries from apps (Sonarr, SickRage, CouchPotato, Mylar, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches",
            "categories": [
                "Downloads",
                "Web",
                "Indexer"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Config/Jackett"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/Downloads/Jackett"
                }
            ],
            "env": [
                {
                    "name": "TZ",
                    "default": "Europe/Paris",
                    "label": "TZ",
                    "description": "specify a timezone to use, see this"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/jackett.png",
            "network_mode": "host",
            "type": 1
        },
        {
            "title": "Miniflux",
            "name": "miniflux",
            "image": "miniflux/miniflux:latest",
            "description": "Miniflux is a minimalist and opinionated feed reader.",
            "categories": [
                "Web",
                "RSS"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8736:8736/tcp"
            ],
            "env": [
                {
                    "name": "DATABASE_URL",
                    "default": "",
                    "label": "DATABASE_URL",
                    "description": "Postgresql connection parameters. See lib/pq for more details."
                },
                {
                    "name": "RUN_MIGRATIONS",
                    "default": "1",
                    "label": "RUN_MIGRATIONS",
                    "description": "Set to 1 to run database migrations during application startup."
                },
                {
                    "name": "ADMIN_USERNAME",
                    "default": "",
                    "label": "ADMIN_USERNAME",
                    "description": "Admin user login, it's used only if CREATE_ADMIN is enabled."
                },
                {
                    "name": "ADMIN_PASSWORD",
                    "default": "",
                    "description": "Admin user password, it's used only if CREATE_ADMIN is enabled.",
                    "label": "ADMIN_PASSWORD"
                },
                {
                    "name": "CREATE_ADMIN",
                    "default": "1",
                    "label": "CREATE_ADMIN",
                    "description": "Set to 1 to create an admin user from environment variables."
                },
                {
                    "name": "LISTEN_ADDR",
                    "default": "0.0.0.0:8736",
                    "label": "LISTEN_ADDR",
                    "description": "Address to listen on. Use absolute path for a Unix socket."
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/miniflux.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Ofelia",
            "name": "ofelia",
            "image": "mcuadros/ofelia:latest",
            "description": "Ofelia is a modern and low footprint job scheduler for docker environments, built on Go. Ofelia aims to be a replacement for the old fashioned cron.",
            "categories": [
                "Docker",
                "Automation"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "volumes": [
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock"
                },
                {
                    "container": "/etc/ofelia/",
                    "bind": "/portainer/Files/AppData/Config/Ofelia"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/docker.png",
            "type": 1
        }
    ]
}