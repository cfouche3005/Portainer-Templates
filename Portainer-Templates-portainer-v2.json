{
    "version": "2",
    "templates": [
        {
            "title": "Caddy",
            "name": "caddy",
            "image": "caddy:latest",
            "description": "Still the only web server to use TLS automatically and by default. Deploy and scale HTTPS effortlessly with Caddy 2.",
            "categories": [
                "Web"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "volumes": [
                {
                    "container": "/etc/caddy",
                    "bind": "/portainer/Files/AppData/Config/Caddy/etc/caddy"
                },
                {
                    "container": "/data",
                    "bind": "/portainer/Files/AppData/Config/Caddy/data"
                },
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Config/Caddy/config"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/svg/caddy.svg",
            "network_mode": "host",
            "type": 1
        },
        {
            "title": "Pritunl",
            "image": "goofball222/pritunl:latest",
            "description": "Enterprise Distributed OpenVPN, IPsec and WireGuard Server.",
            "categories": [
                "Web",
                "VPN"
            ],
            "platform": "linux",
            "note": "Docs : https://hub.docker.com/r/goofball222/pritunl",
            "restart_policy": "unless-stopped",
            "ports": [
                "80:80/tcp",
                "443:443/tcp",
                "1194:1194/tcp",
                "1194:1194/udp",
                "1195:1195/udp",
                "9700:9700/tcp"
            ],
            "volumes": [
                {
                    "container": "/etc/localtime:ro",
                    "bind": "/etc/localtime"
                }
            ],
            "env": [
                {
                    "name": "DEBUG",
                    "default": "false",
                    "label": "Debug",
                    "description": "Set to true for extra entrypoint script verbosity for debugging"
                },
                {
                    "name": "MONGODB_URI",
                    "default": "mongodb://mongo:27017/pritunl",
                    "label": "Mongodb",
                    "description": "Sets the URI Pritunl will access for the Mongo DB instance"
                },
                {
                    "name": "PRITUNL_OPTS",
                    "default": "",
                    "label": "Pritunl Options",
                    "description": "Any additional custom run options for the container pritunl process"
                },
                {
                    "name": "REVERSE_PROXY",
                    "default": "false",
                    "label": "Reverse proxy",
                    "description": "Set to true to set the pritunl web interface to run in reverse-proxy mode (Traefik/nginx)"
                },
                {
                    "name": "WIREGUARD",
                    "default": "false",
                    "label": "Wireguard",
                    "description": "Set to true, Switches web interface back to port 443 and HTTPS if running wireguard with reverse-proxy (Traefik/nginx)"
                },
                {
                    "name": "TZ",
                    "default": "CET",
                    "description": "",
                    "label": "Timezone"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/pritunl.png",
            "network_mode": "host",
            "type": 1,
            "privileged": true
        },
        {
            "title": "Pritunl with Fake Api",
            "image": "cf3005/pritunl-with-fake-api:latest",
            "description": "Enterprise Distributed OpenVPN, IPsec and WireGuard Server.",
            "categories": [
                "Web",
                "VPN"
            ],
            "platform": "linux",
            "note": "Docs : https://hub.docker.com/r/goofball222/pritunl",
            "restart_policy": "unless-stopped",
            "ports": [
                "80:80/tcp",
                "443:443/tcp",
                "1194:1194/tcp",
                "1194:1194/udp",
                "1195:1195/udp",
                "9700:9700/tcp"
            ],
            "volumes": [
                {
                    "container": "/etc/localtime:ro",
                    "bind": "/etc/localtime"
                }
            ],
            "env": [
                {
                    "name": "DEBUG",
                    "default": "false",
                    "label": "Debug",
                    "description": "Set to true for extra entrypoint script verbosity for debugging"
                },
                {
                    "name": "MONGODB_URI",
                    "default": "mongodb://mongo:27017/pritunl",
                    "label": "Mongodb URI",
                    "description": "Sets the URI Pritunl will access for the Mongo DB instance"
                },
                {
                    "name": "PRITUNL_OPTS",
                    "default": "",
                    "label": "Pritunl Options",
                    "description": "Any additional custom run options for the container pritunl process"
                },
                {
                    "name": "REVERSE_PROXY",
                    "default": "false",
                    "label": "Reverse proxy",
                    "description": "Set to true to set the pritunl web interface to run in reverse-proxy mode (Traefik/nginx)"
                },
                {
                    "name": "WIREGUARD",
                    "default": "false",
                    "label": "Wireguard",
                    "description": "Set to true, Switches web interface back to port 443 and HTTPS if running wireguard with reverse-proxy (Traefik/nginx)"
                },
                {
                    "name": "TZ",
                    "default": "CET",
                    "label": "Timezone"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/pritunl.png",
            "network_mode": "host",
            "type": 1,
            "privileged": true
        },
        {
            "title": "Onedrive",
            "image": "driveone/onedrive:alpine",
            "description": "A free Microsoft OneDrive Client which supports OneDrive Personal, OneDrive for Business, OneDrive for Office365 and SharePoint.",
            "categories": [
                "Files",
                "Backup",
                "Sync"
            ],
            "platform": "linux",
            "note": "Sources : https://github.com/abraunegg/onedrive\nDocs : https://github.com/abraunegg/onedrive/tree/master/docs\nUsing the alpine image tag",
            "restart_policy": "unless-stopped",
            "volumes": [
                {
                    "container": "/onedrive/conf",
                    "bind": "/portainer/Files/AppData/Config/Onedrive/Config"
                },
                {
                    "container": "/onedrive/data",
                    "bind": ""
                }
            ],
            "env": [
                {
                    "name": "ONEDRIVE_UID",
                    "default": "1000",
                    "label": "Onedrive UserID",
                    "description": "UserID (UID) to run as"
                },
                {
                    "name": "ONEDRIVE_GID",
                    "default": "100",
                    "description": "GroupID (GID) to run as",
                    "label": "Onedrive GroupID"
                },
                {
                    "name": "ONEDRIVE_VERBOSE",
                    "default": "0",
                    "label": "Onedrive Verbose",
                    "description": "Controls \"--verbose\" switch on onedrive sync. Default is 0"
                },
                {
                    "name": "ONEDRIVE_DEBUG",
                    "default": "0",
                    "description": "Controls \"--verbose --verbose\" switch on onedrive sync. Default is 0",
                    "label": "Onedrive Debug"
                },
                {
                    "name": "ONEDRIVE_DEBUG_HTTPS",
                    "default": "0",
                    "description": "Controls \"--debug-https\" switch on onedrive sync. Default is 0",
                    "label": "Onedrive Debug HTTPS"
                },
                {
                    "name": "ONEDRIVE_RESYNC",
                    "default": "0",
                    "label": "Onedrive Resync",
                    "description": "Controls \"--resync\" switch on onedrive sync. Default is 0"
                },
                {
                    "name": "ONEDRIVE_DOWNLOADONLY",
                    "default": "0",
                    "description": "Controls \"--download-only\" switch on onedrive sync. Default is 0",
                    "label": "Onedrive Download Only"
                },
                {
                    "name": "ONEDRIVE_UPLOADONLY",
                    "default": "0",
                    "description": "Controls \"--upload-only\" switch on onedrive sync. Default is 0",
                    "label": "Onedrive Upload Only"
                },
                {
                    "name": "ONEDRIVE_LOGOUT",
                    "default": "0",
                    "description": "Controls \"--logout\" switch. Default is 0",
                    "label": "Ondrive Logout"
                },
                {
                    "name": "ONEDRIVE_REAUTH",
                    "default": "0",
                    "description": "Controls \"--reauth\" switch. Default is 0",
                    "label": "Onedrive Reauth"
                },
                {
                    "name": "ONEDRIVE_AUTHFILES",
                    "default": "",
                    "description": "Controls \"--auth-files\" option. Default is \"\"",
                    "label": "Onedrive AuthFiles"
                },
                {
                    "name": "ONEDRIVE_AUTHRESPONSE",
                    "default": "",
                    "label": "Onedrive AuthResponse",
                    "description": "Controls \"--auth-response\" option. Default is \"\""
                },
                {
                    "name": "ONEDRIVE_DISPLAY_CONFIG",
                    "default": "0",
                    "description": "Controls \"--display-running-config\" switch on onedrive sync. Default is 0",
                    "label": "Ondrive Display Config"
                }
            ],
            "logo": "https://upload.wikimedia.org/wikipedia/commons/3/3c/Microsoft_Office_OneDrive_%282019%E2%80%93present%29.svg",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "Authelia",
            "image": "authelia/authelia:latest",
            "description": "Authelia is an open-source authentication and authorization server and portal fulfilling the identity and access management (IAM) role of information security in providing multi-factor authentication and single sign-on (SSO) for your applications via a web portal. It acts as a companion for common reverse proxies.",
            "categories": [
                "Web",
                "Security"
            ],
            "platform": "linux",
            "note": "See  https://www.authelia.com/integration/deployment/docker/#standalone-example for configuration",
            "restart_policy": "unless-stopped",
            "ports": [
                "9091:9091/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": ""
                },
                {
                    "container": "/secrets",
                    "bind": ""
                }
            ],
            "env": [
                {
                    "name": "AUTHELIA_JWT_SECRET_FILE",
                    "default": "/secrets/JWT_SECRET",
                    "description": "Defines the secret used to craft JWT tokens leveraged by the identity verification process. This can a random string. It’s strongly recommended this is a Random Alphanumeric String with 64 or more characters.",
                    "label": "JWT secret"
                },
                {
                    "name": "AUTHELIA_SESSION_SECRET_FILE",
                    "default": "/secrets/SESSION_SECRET",
                    "label": "Session secret",
                    "description": "The secret key used to encrypt session data in Redis.  It’s strongly recommended this is a Random Alphanumeric String with 64 or more characters."
                },
                {
                    "name": "AUTHELIA_STORAGE_POSTGRES_PASSWORD_FILE",
                    "default": "/secrets/STORAGE_PASSWORD",
                    "label": "Postgres Password",
                    "description": "The password paired with the username used to connect to the database.  It’s strongly recommended this is a Random Alphanumeric String with 64 or more characters and the user password is changed to this value."
                },
                {
                    "name": "AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE",
                    "default": "/secrets/STORAGE_ENCRYPTION_KEY",
                    "label": "Encryption Key",
                    "description": "The encryption key used to encrypt data in the database. We encrypt data by creating a sha256 checksum of the provided value, and use that to encrypt the data with the AES-GCM 256bit algorithm.  The minimum length of this key is 20 characters.  It’s strongly recommended this is a Random Alphanumeric String with 64 or more characters."
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/authelia.png",
            "network_mode": "host",
            "type": 1
        },
        {
            "title": "PostgreSQL",
            "name": "postgresql",
            "image": "postgres:latest",
            "description": "PostgreSQL is a powerful, open source object-relational database system with over 35 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance.",
            "categories": [
                "Database"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "5432/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/postgresql/data",
                    "bind": ""
                }
            ],
            "env": [
                {
                    "name": "POSTGRES_USER",
                    "default": "postgres",
                    "label": "Postgres SuperUser"
                },
                {
                    "name": "POSTGRES_PASSWORD",
                    "default": "",
                    "label": "Postgres SuperUser Password"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/postgres.png",
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "LLDAP",
            "name": "lldap",
            "image": "nitnelave/lldap:stable",
            "description": "This project is a lightweight authentication server that provides an opinionated, simplified LDAP interface for authentication. It integrates with many backends, from KeyCloak to Authelia to Nextcloud and more !",
            "categories": [
                "Web",
                "Security"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "3890:3890/tcp",
                "17170:17170/tcp"
            ],
            "volumes": [
                {
                    "container": "/data",
                    "bind": "/portainer/Files/AppData/Config/LLAP"
                }
            ],
            "env": [
                {
                    "name": "UID",
                    "default": "1000",
                    "label": "UserID"
                },
                {
                    "name": "GID",
                    "default": "100",
                    "label": "GroupID"
                },
                {
                    "name": "TZ",
                    "default": "CEST",
                    "label": "Timezone"
                },
                {
                    "name": "LLDAP_JWT_SECRET",
                    "default": "",
                    "label": "LLDAP_JWT_SECRET"
                },
                {
                    "name": "LLDAP_LDAP_USER_PASS",
                    "default": "",
                    "label": "LLDAP_LDAP_USER_PASS"
                },
                {
                    "name": "LLDAP_LDAP_BASE_DN",
                    "default": "",
                    "label": "LLDAP_LDAP_BASE_DN"
                }
            ],
            "network_mode": "bridge",
            "type": 1
        },
        {
            "title": "AdGuardHome",
            "name": "adguard-home",
            "image": "adguard/adguardhome:latest",
            "description": "AdGuard Home is a network-wide software for blocking ads and tracking. After you set it up, it'll cover ALL your home devices, and you don't need any client-side software for that.",
            "categories": [
                "DNS",
                "Web"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "53:53/tcp",
                "53:53/udp",
                "67:67/udp",
                "68:68/tcp",
                "68:68/udp",
                "80:80/tcp",
                "443:443/tcp",
                "3000:3000/tcp",
                "853:853/tcp",
                "784:784/udp",
                "5443:5443/tcp",
                "5443:5443/udp"
            ],
            "volumes": [
                {
                    "container": "/opt/adguardhome/work",
                    "bind": "/portainer/Files/AppData/Adguard/Workdir"
                },
                {
                    "container": "/opt/adguardhome/conf",
                    "bind": "/portainer/Files/AppData/Adguard/Conf"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/adguard-home.png",
            "network_mode": "host",
            "type": 1
        },
        {
            "title": "AdGuardHome Sync",
            "name": "adguard-home-sync",
            "image": "ghcr.io/bakito/adguardhome-sync:latest",
            "description": "Synchronize AdGuardHome config to replica instances.",
            "categories": [
                "DNS",
                "Sync"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "8080:8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/Files/AppData/Adguard/Sync"
                }
            ],
            "logo": "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/adguard-home.png",
            "type": 1
        }
    ]
}